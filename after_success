#!/bin/sh
set -e

# Directories.
root_dir=`pwd`

if [ -d debian ]; then
    build_dir="/tmp/_travis/build"
    install_dir="/tmp/_travis/install"
else
    build_dir="$root_dir/_travis/build"
    install_dir="$root_dir/_travis/install"
fi


if [ -d debian ]; then
    if `test x${DIST} = x`; then
	echo "distribution is not set, skipping this build"
	exit 0
    fi
    echo "Target distribution: ${DIST}"

    export GNUPGHOME="$root_dir/.travis/.gnupg"
    # If the build is a success, upload the source package to Launchpad.
    if `test x${DIST} = xunstable`; then
	echo "Debian Sid package. Skipping Launchpad upload..."
    else
	if `test x${TRAVIS_PULL_REQUEST} = x`; then
	    echo "skipping launchpad upload in pull requets"
	else
	    dput ppa:${PPA_URI} "$build_dir"/export/*_source.changes
	fi
    fi
else
    if [ ! x${DIST} = x ]; then
	echo "skipping this build"
	exit 0
    fi

    cd $root_dir
    HEAD=`git rev-parse HEAD`

    # Upload coveralls data.
    if [ x${CC} = xgcc ]; then
	coveralls -e $install_dir
    else
	echo "skipping coveralls upload in non-gcc builds"
    fi

    # Set the push capable URL.
    git remote set-url origin "${GH_PUSH_URI}"
    # Retrieve last commit of the gh-pages branch.
    git fetch --quiet --depth=1 origin gh-pages:gh-pages
    # Update the documentation.
    if `! test x${TRAVIS_PULL_REQUEST} = x`; then
	cd $build_dir/doc && $root_dir/cmake/github/update-doxygen-doc.sh \
	    -r $root_dir -b $build_dir
    else
	echo "skipping documentation upload in pull requests"
    fi

    # Push git note indicating success
    cd $root_dir
    notes_msg="Successful build.\n----\n\nDependencies commit id:"
    for package in ${GIT_DEPENDENCIES}; do
	cd $build_dir/$package
	notes_msg="${notes_msg} $package : " $(git rev-parse HEAD) "\n"
    done
    cd $root_dir
    git fetch --quiet origin refs/notes/travis:refs/notes/travis
    git notes --ref=travis add -f -m "$(echo "${notes_msg}")" $HEAD
    git push origin refs/notes/travis:refs/notes/travis -f
fi
